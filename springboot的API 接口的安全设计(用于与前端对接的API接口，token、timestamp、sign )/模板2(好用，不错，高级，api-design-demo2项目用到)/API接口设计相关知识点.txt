【与前端对接的API接口的安全性设计：后端的人写完接口了，要进行测试接口，他要先登录获取token、sign、timestamp，然后携带这些参数来进行其他业务后端接口的请求来进行测试自己的接口，如果过期了重新登录再获取新的（师兄的是刷新，其实也就类似于登录获取的功能），前后端分离使用，类似师兄那种】
（！！！请求参数的设计可以是以请求头的方式，也可以是以普通的请求参数方式）

一、实现的过程原理
与前端对接的API接口，如果被第三方抓包并进行恶意篡改参数，可能会导致数据泄露，甚至会被篡改数据，我主要围绕时间戳，token，签名三个部分来保证API接口的安全性：
1.用户成功登陆站点后，服务器会返回一个token，用户的任何操作都必须带了这个参数，可以将这个参数直接放到header里。
2.客户端用需要发送的参数和token生成一个签名sign，作为参数一起发送给服务端，服务端在用同样的方法生成sign进行检查是否被篡改。
3.但这依然存在问题，可能会被进行恶意无限制访问，这时我们需要引入一个时间戳参数，如果超时即是无效的。
4.服务端需要对token，签名，时间戳进行验证，只有token有效，时间戳未超时，签名有效才能被放行。

二、开放接口
没有进行任何限制，简单粗暴的访问方式，这样的接口方式一般在开放的应用平台，查天气，查快递，只要你输入正确对应的参数调用，即可获取到自己需要的信息，我们可以任意修改参数值。

三、Token认证获取
用户登录成功后，会获取一个ticket值，接下去任何接口的访问都需要这个参数。我们把它放置在redis内，有效期为10分钟，在ticket即将超时，无感知续命。延长使用时间，如果用户在一段时间内没进行任何操作，就需要重新登录系统。

四、Sign签名
把所有的参数拼接一起，在加入系统秘钥，进行MD5计算生成一个sign签名，防止参数被人恶意篡改，后台按同样的方法生成秘钥，进行签名对比

五、重复访问
引入一个时间戳参数，保证接口仅在一分钟内有效，需要和客户端时间保持一致。需要跟当前服务器时间进行对比，如果超过一分钟，就拒绝本次请求，节省服务器查询数据的消耗

六、拦截器
每次请求都带有这三个参数，我们都需要进行验证，只有在三个参数都满足我们的要求，才允许数据返回或被操作。

七、访问
先登录系统，获取合法的ticket
生成一个合法的sign验证，获取测试ts，访问openDemo，即可正常访问。还可以将参数加密，将http换成https，就不一 一展开了。

（参考教程：https://mp.weixin.qq.com/s/GnEj0sg8R3XCQSOeeA7IDQ ）


