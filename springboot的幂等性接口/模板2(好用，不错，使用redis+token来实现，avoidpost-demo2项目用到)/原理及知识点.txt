在开发中，一个对外暴露的接口可能会面临瞬间的大量重复请求，如果想过滤掉重复请求造成对业务的伤害，那就需要实现幂等

幂等：
任意多次执行所产生的影响均与一次执行的影响相同。最终的含义就是 对数据库的影响只能是一次性的，不能重复处理。
解决方案：

数据库建立唯一性索引，可以保证最终插入数据库的只有一条数据
token机制，每次接口请求前先获取一个token，然后再下次请求的时候在请求的header体中加上这个token，后台进行验证，如果验证通过删除token，下次请求再次判断token（本次案例使用）
悲观锁或者乐观锁，悲观锁可以保证每次for update的时候其他sql无法update数据(在数据库引擎是innodb的时候,select的条件必须是唯一索引,防止锁全表)
先查询后判断，首先通过查询数据库是否存在数据，如果存在证明已经请求过了，直接拒绝该请求，如果没有存在，就证明是第一次进来，直接放行

【与模板1的token+session原理是类似的，只是这里使用redis代替session而已，但是redis和session的实现的功能是一样的】

（参考教程：https://blog.csdn.net/weixin_44795847/article/details/106680396?utm_medium=distribute.wap_relevant.none-task-blog-title-3）
